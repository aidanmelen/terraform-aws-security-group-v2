=== RUN   TestTerraformManagedRulesExample
TestTerraformManagedRulesExample 2022-08-28T18:02:12Z retry.go:91: terraform [init -upgrade=false]
TestTerraformManagedRulesExample 2022-08-28T18:02:12Z logger.go:66: Running command terraform with args [init -upgrade=false]
TestTerraformManagedRulesExample 2022-08-28T18:02:12Z logger.go:66: [0m[1mInitializing modules...[0m
TestTerraformManagedRulesExample 2022-08-28T18:02:12Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:12Z logger.go:66: [0m[1mInitializing the backend...[0m
TestTerraformManagedRulesExample 2022-08-28T18:02:13Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:13Z logger.go:66: [0m[1mInitializing provider plugins...[0m
TestTerraformManagedRulesExample 2022-08-28T18:02:13Z logger.go:66: - Reusing previous version of hashicorp/aws from the dependency lock file
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66: - Using previously-installed hashicorp/aws v4.27.0
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66: [0m[32m
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66: You may now begin working with Terraform. Try running "terraform plan" to see
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66: any changes that are required for your infrastructure. All Terraform commands
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66: should now work.
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66: If you ever set or change modules or backend configuration for Terraform,
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66: rerun this command to reinitialize your working directory. If you forget, other
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66: commands will detect it and remind you to do so if necessary.[0m
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z retry.go:91: terraform [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformManagedRulesExample 2022-08-28T18:02:14Z logger.go:66: Running command terraform with args [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformManagedRulesExample 2022-08-28T18:02:16Z logger.go:66: data.aws_prefix_list.private_s3: Reading...
TestTerraformManagedRulesExample 2022-08-28T18:02:16Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformManagedRulesExample 2022-08-28T18:02:16Z logger.go:66: data.aws_prefix_list.private_s3: Read complete after 0s [id=pl-1111111111111111]
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: data.aws_vpc.default: Read complete after 0s [id=vpc-1111111111111111]
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: data.aws_security_group.default: Reading...
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: data.aws_security_group.default: Read complete after 0s [id=sg-1111111111111111]
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   40:   cidr_blocks              = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   43:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   44:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "cidr_blocks": conflicts with source_security_group_id
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   40:   cidr_blocks              = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   43:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   44:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "cidr_blocks": conflicts with self
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   45:   ipv6_cidr_blocks         = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   48:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   49:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "ipv6_cidr_blocks": conflicts with source_security_group_id
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   45:   ipv6_cidr_blocks         = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   48:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   49:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "ipv6_cidr_blocks": conflicts with self
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "self": conflicts with cidr_blocks
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 56, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   56:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "source_security_group_id": conflicts with cidr_blocks
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   68:   cidr_blocks              = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   71:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   72:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "cidr_blocks": conflicts with self
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   68:   cidr_blocks              = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   71:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   72:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "cidr_blocks": conflicts with source_security_group_id
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   73:   ipv6_cidr_blocks         = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   76:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   77:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "ipv6_cidr_blocks": conflicts with self
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   73:   ipv6_cidr_blocks         = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   76:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   77:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "ipv6_cidr_blocks": conflicts with source_security_group_id
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 83, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   83:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "self": conflicts with cidr_blocks
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   on ../../main.tf line 84, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:   84:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: "source_security_group_id": conflicts with cidr_blocks
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z retry.go:99: Returning due to fatal error: FatalError{Underlying: error while running command: exit status 1;
Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
  40:   cidr_blocks              = try(
  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
  43:     null
  44:   )

"cidr_blocks": conflicts with source_security_group_id

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
  40:   cidr_blocks              = try(
  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
  43:     null
  44:   )

"cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
  45:   ipv6_cidr_blocks         = try(
  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  48:     null
  49:   )

"ipv6_cidr_blocks": conflicts with source_security_group_id

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
  45:   ipv6_cidr_blocks         = try(
  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  48:     null
  49:   )

"ipv6_cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
  on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
  55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

"self": conflicts with cidr_blocks

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 56, in resource "aws_security_group_rule" "ingress":
  56:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)

"source_security_group_id": conflicts with cidr_blocks

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-all-true"],
  on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
  68:   cidr_blocks              = try(
  69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
  70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
  71:     null
  72:   )

"cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
  68:   cidr_blocks              = try(
  69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
  70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
  71:     null
  72:   )

"cidr_blocks": conflicts with source_security_group_id

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-all-true"],
  on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
  73:   ipv6_cidr_blocks         = try(
  74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  76:     null
  77:   )

"ipv6_cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
  73:   ipv6_cidr_blocks         = try(
  74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  76:     null
  77:   )

"ipv6_cidr_blocks": conflicts with source_security_group_id

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-all-true"],
  on ../../main.tf line 83, in resource "aws_security_group_rule" "egress":
  83:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

"self": conflicts with cidr_blocks

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 84, in resource "aws_security_group_rule" "egress":
  84:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)

"source_security_group_id": conflicts with cidr_blocks}
    apply.go:15:
        	Error Trace:	/workspaces/terraform-aws-security-group-v2/test/apply.go:15
        	            				/workspaces/terraform-aws-security-group-v2/test/terraform_managed_test.go:25
        	Error:      	Received unexpected error:
        	            	FatalError{Underlying: error while running command: exit status 1;
        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
        	            	  40:   cidr_blocks              = try(
        	            	  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  43:     null
        	            	  44:   )

        	            	"cidr_blocks": conflicts with source_security_group_id

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
        	            	  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
        	            	  40:   cidr_blocks              = try(
        	            	  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  43:     null
        	            	  44:   )

        	            	"cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
        	            	  45:   ipv6_cidr_blocks         = try(
        	            	  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  48:     null
        	            	  49:   )

        	            	"ipv6_cidr_blocks": conflicts with source_security_group_id

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
        	            	  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
        	            	  45:   ipv6_cidr_blocks         = try(
        	            	  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  48:     null
        	            	  49:   )

        	            	"ipv6_cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
        	            	  on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
        	            	  55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

        	            	"self": conflicts with cidr_blocks

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 56, in resource "aws_security_group_rule" "ingress":
        	            	  56:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)

        	            	"source_security_group_id": conflicts with cidr_blocks

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-all-true"],
        	            	  on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
        	            	  68:   cidr_blocks              = try(
        	            	  69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  71:     null
        	            	  72:   )

        	            	"cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
        	            	  68:   cidr_blocks              = try(
        	            	  69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  71:     null
        	            	  72:   )

        	            	"cidr_blocks": conflicts with source_security_group_id

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-all-true"],
        	            	  on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
        	            	  73:   ipv6_cidr_blocks         = try(
        	            	  74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  76:     null
        	            	  77:   )

        	            	"ipv6_cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
        	            	  73:   ipv6_cidr_blocks         = try(
        	            	  74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  76:     null
        	            	  77:   )

        	            	"ipv6_cidr_blocks": conflicts with source_security_group_id

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-all-true"],
        	            	  on ../../main.tf line 83, in resource "aws_security_group_rule" "egress":
        	            	  83:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

        	            	"self": conflicts with cidr_blocks

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 84, in resource "aws_security_group_rule" "egress":
        	            	  84:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)

        	            	"source_security_group_id": conflicts with cidr_blocks}
        	Test:       	TestTerraformManagedRulesExample
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z retry.go:91: terraform [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformManagedRulesExample 2022-08-28T18:02:17Z logger.go:66: Running command terraform with args [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: data.aws_prefix_list.private_s3: Reading...
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: data.aws_prefix_list.private_s3: Read complete after 0s [id=pl-1111111111111111]
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: data.aws_vpc.default: Read complete after 1s [id=vpc-1111111111111111]
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: data.aws_security_group.default: Reading...
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: data.aws_security_group.default: Read complete after 0s [id=sg-1111111111111111]
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   40:   cidr_blocks              = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   43:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   44:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "cidr_blocks": conflicts with self
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   40:   cidr_blocks              = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   43:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   44:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "cidr_blocks": conflicts with source_security_group_id
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   45:   ipv6_cidr_blocks         = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   48:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   49:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "ipv6_cidr_blocks": conflicts with self
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   45:   ipv6_cidr_blocks         = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   48:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   49:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "ipv6_cidr_blocks": conflicts with source_security_group_id
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "self": conflicts with cidr_blocks
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 56, in resource "aws_security_group_rule" "ingress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   56:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "source_security_group_id": conflicts with cidr_blocks
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   68:   cidr_blocks              = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   71:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   72:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "cidr_blocks": conflicts with self
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   68:   cidr_blocks              = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   71:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   72:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "cidr_blocks": conflicts with source_security_group_id
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   73:   ipv6_cidr_blocks         = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   76:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   77:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "ipv6_cidr_blocks": conflicts with self
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   73:   ipv6_cidr_blocks         = try(
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   76:     null
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   77:   )
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "ipv6_cidr_blocks": conflicts with source_security_group_id
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-all-true"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 83, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   83:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "self": conflicts with cidr_blocks
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   on ../../main.tf line 84, in resource "aws_security_group_rule" "egress":
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:   84:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66:
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z logger.go:66: "source_security_group_id": conflicts with cidr_blocks
TestTerraformManagedRulesExample 2022-08-28T18:02:20Z retry.go:99: Returning due to fatal error: FatalError{Underlying: error while running command: exit status 1;
Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
  40:   cidr_blocks              = try(
  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
  43:     null
  44:   )

"cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
  40:   cidr_blocks              = try(
  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
  43:     null
  44:   )

"cidr_blocks": conflicts with source_security_group_id

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
  45:   ipv6_cidr_blocks         = try(
  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  48:     null
  49:   )

"ipv6_cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
  45:   ipv6_cidr_blocks         = try(
  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  48:     null
  49:   )

"ipv6_cidr_blocks": conflicts with source_security_group_id

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
  on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
  55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

"self": conflicts with cidr_blocks

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 56, in resource "aws_security_group_rule" "ingress":
  56:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)

"source_security_group_id": conflicts with cidr_blocks

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-all-true"],
  on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
  68:   cidr_blocks              = try(
  69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
  70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
  71:     null
  72:   )

"cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
  68:   cidr_blocks              = try(
  69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
  70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
  71:     null
  72:   )

"cidr_blocks": conflicts with source_security_group_id

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-all-true"],
  on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
  73:   ipv6_cidr_blocks         = try(
  74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  76:     null
  77:   )

"ipv6_cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
  73:   ipv6_cidr_blocks         = try(
  74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  76:     null
  77:   )

"ipv6_cidr_blocks": conflicts with source_security_group_id

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-all-true"],
  on ../../main.tf line 83, in resource "aws_security_group_rule" "egress":
  83:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

"self": conflicts with cidr_blocks

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
  on ../../main.tf line 84, in resource "aws_security_group_rule" "egress":
  84:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)

"source_security_group_id": conflicts with cidr_blocks}
    destroy.go:11:
        	Error Trace:	/workspaces/terraform-aws-security-group-v2/test/destroy.go:11
        	            				/workspaces/terraform-aws-security-group-v2/test/panic.go:642
        	            				/workspaces/terraform-aws-security-group-v2/test/testing.go:756
        	            				/workspaces/terraform-aws-security-group-v2/test/apply.go:15
        	            				/workspaces/terraform-aws-security-group-v2/test/terraform_managed_test.go:25
        	Error:      	Received unexpected error:
        	            	FatalError{Underlying: error while running command: exit status 1;
        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
        	            	  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
        	            	  40:   cidr_blocks              = try(
        	            	  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  43:     null
        	            	  44:   )

        	            	"cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
        	            	  40:   cidr_blocks              = try(
        	            	  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  43:     null
        	            	  44:   )

        	            	"cidr_blocks": conflicts with source_security_group_id

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
        	            	  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
        	            	  45:   ipv6_cidr_blocks         = try(
        	            	  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  48:     null
        	            	  49:   )

        	            	"ipv6_cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
        	            	  45:   ipv6_cidr_blocks         = try(
        	            	  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  48:     null
        	            	  49:   )

        	            	"ipv6_cidr_blocks": conflicts with source_security_group_id

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-all-true"],
        	            	  on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
        	            	  55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

        	            	"self": conflicts with cidr_blocks

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 56, in resource "aws_security_group_rule" "ingress":
        	            	  56:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)

        	            	"source_security_group_id": conflicts with cidr_blocks

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-all-true"],
        	            	  on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
        	            	  68:   cidr_blocks              = try(
        	            	  69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  71:     null
        	            	  72:   )

        	            	"cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 68, in resource "aws_security_group_rule" "egress":
        	            	  68:   cidr_blocks              = try(
        	            	  69:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  70:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  71:     null
        	            	  72:   )

        	            	"cidr_blocks": conflicts with source_security_group_id

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-all-true"],
        	            	  on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
        	            	  73:   ipv6_cidr_blocks         = try(
        	            	  74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  76:     null
        	            	  77:   )

        	            	"ipv6_cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 73, in resource "aws_security_group_rule" "egress":
        	            	  73:   ipv6_cidr_blocks         = try(
        	            	  74:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  75:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  76:     null
        	            	  77:   )

        	            	"ipv6_cidr_blocks": conflicts with source_security_group_id

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-all-true"],
        	            	  on ../../main.tf line 83, in resource "aws_security_group_rule" "egress":
        	            	  83:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

        	            	"self": conflicts with cidr_blocks

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.egress["all-icmp-sg-1111111111111111"],
        	            	  on ../../main.tf line 84, in resource "aws_security_group_rule" "egress":
        	            	  84:   source_security_group_id = try(each.value["source_security_group_id"], local.rules[lookup(each.value, "rule")]["source_security_group_id"], null)

        	            	"source_security_group_id": conflicts with cidr_blocks}
        	Test:       	TestTerraformManagedRulesExample
--- FAIL: TestTerraformManagedRulesExample (8.83s)
FAIL
FAIL	command-line-arguments	8.843s
FAIL
