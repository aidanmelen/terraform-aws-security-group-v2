=== RUN   TestTerraformBasicExample
TestTerraformBasicExample 2022-08-28T18:01:41Z retry.go:91: terraform [init -upgrade=false]
TestTerraformBasicExample 2022-08-28T18:01:41Z logger.go:66: Running command terraform with args [init -upgrade=false]
TestTerraformBasicExample 2022-08-28T18:01:41Z logger.go:66: [0m[1mInitializing modules...[0m
TestTerraformBasicExample 2022-08-28T18:01:41Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:41Z logger.go:66: [0m[1mInitializing the backend...[0m
TestTerraformBasicExample 2022-08-28T18:01:41Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:41Z logger.go:66: [0m[1mInitializing provider plugins...[0m
TestTerraformBasicExample 2022-08-28T18:01:41Z logger.go:66: - Reusing previous version of hashicorp/aws from the dependency lock file
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66: - Using previously-installed hashicorp/aws v4.27.0
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66: [0m[32m
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66: You may now begin working with Terraform. Try running "terraform plan" to see
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66: any changes that are required for your infrastructure. All Terraform commands
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66: should now work.
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66: If you ever set or change modules or backend configuration for Terraform,
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66: rerun this command to reinitialize your working directory. If you forget, other
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66: commands will detect it and remind you to do so if necessary.[0m
TestTerraformBasicExample 2022-08-28T18:01:43Z retry.go:91: terraform [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformBasicExample 2022-08-28T18:01:43Z logger.go:66: Running command terraform with args [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformBasicExample 2022-08-28T18:01:45Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66: data.aws_vpc.default: Read complete after 0s [id=vpc-1111111111111111]
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-from-self"],
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   40:   cidr_blocks              = try(
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   43:     null
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   44:   )
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66: "cidr_blocks": conflicts with self
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-from-self"],
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   45:   ipv6_cidr_blocks         = try(
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   48:     null
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   49:   )
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66: "ipv6_cidr_blocks": conflicts with self
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-from-self"],
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:   55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66: "self": conflicts with cidr_blocks
TestTerraformBasicExample 2022-08-28T18:01:46Z retry.go:99: Returning due to fatal error: FatalError{Underlying: error while running command: exit status 1;
Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
  40:   cidr_blocks              = try(
  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
  43:     null
  44:   )

"cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
  45:   ipv6_cidr_blocks         = try(
  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  48:     null
  49:   )

"ipv6_cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
  on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
  55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

"self": conflicts with cidr_blocks}
    apply.go:15:
        	Error Trace:	/workspaces/terraform-aws-security-group-v2/test/apply.go:15
        	            				/workspaces/terraform-aws-security-group-v2/test/terraform_basic_test.go:25
        	Error:      	Received unexpected error:
        	            	FatalError{Underlying: error while running command: exit status 1;
        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
        	            	  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
        	            	  40:   cidr_blocks              = try(
        	            	  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  43:     null
        	            	  44:   )

        	            	"cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
        	            	  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
        	            	  45:   ipv6_cidr_blocks         = try(
        	            	  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  48:     null
        	            	  49:   )

        	            	"ipv6_cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
        	            	  on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
        	            	  55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

        	            	"self": conflicts with cidr_blocks}
        	Test:       	TestTerraformBasicExample
TestTerraformBasicExample 2022-08-28T18:01:46Z retry.go:91: terraform [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformBasicExample 2022-08-28T18:01:46Z logger.go:66: Running command terraform with args [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformBasicExample 2022-08-28T18:01:49Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66: data.aws_vpc.default: Read complete after 1s [id=vpc-1111111111111111]
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-from-self"],
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   40:   cidr_blocks              = try(
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   43:     null
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   44:   )
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66: "cidr_blocks": conflicts with self
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-from-self"],
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   45:   ipv6_cidr_blocks         = try(
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   48:     null
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   49:   )
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66: "ipv6_cidr_blocks": conflicts with self
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66: Error: Conflicting configuration arguments
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   with module.security_group.aws_security_group_rule.ingress["all-from-self"],
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:   55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66:
TestTerraformBasicExample 2022-08-28T18:01:50Z logger.go:66: "self": conflicts with cidr_blocks
TestTerraformBasicExample 2022-08-28T18:01:50Z retry.go:99: Returning due to fatal error: FatalError{Underlying: error while running command: exit status 1;
Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
  40:   cidr_blocks              = try(
  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
  43:     null
  44:   )

"cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
  45:   ipv6_cidr_blocks         = try(
  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
  48:     null
  49:   )

"ipv6_cidr_blocks": conflicts with self

Error: Conflicting configuration arguments

  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
  on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
  55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

"self": conflicts with cidr_blocks}
    destroy.go:11:
        	Error Trace:	/workspaces/terraform-aws-security-group-v2/test/destroy.go:11
        	            				/workspaces/terraform-aws-security-group-v2/test/panic.go:642
        	            				/workspaces/terraform-aws-security-group-v2/test/testing.go:756
        	            				/workspaces/terraform-aws-security-group-v2/test/apply.go:15
        	            				/workspaces/terraform-aws-security-group-v2/test/terraform_basic_test.go:25
        	Error:      	Received unexpected error:
        	            	FatalError{Underlying: error while running command: exit status 1;
        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
        	            	  on ../../main.tf line 40, in resource "aws_security_group_rule" "ingress":
        	            	  40:   cidr_blocks              = try(
        	            	  41:     distinct(concat(lookup(each.value, "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  42:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "cidr_blocks", []), var.default_cidr_blocks)),
        	            	  43:     null
        	            	  44:   )

        	            	"cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
        	            	  on ../../main.tf line 45, in resource "aws_security_group_rule" "ingress":
        	            	  45:   ipv6_cidr_blocks         = try(
        	            	  46:     distinct(concat(lookup(each.value, "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  47:     distinct(concat(lookup(local.rules[lookup(each.value, "rule")], "ipv6_cidr_blocks", []), var.default_ipv6_cidr_blocks)),
        	            	  48:     null
        	            	  49:   )

        	            	"ipv6_cidr_blocks": conflicts with self

        	            	Error: Conflicting configuration arguments

        	            	  with module.security_group.aws_security_group_rule.ingress["all-from-self"],
        	            	  on ../../main.tf line 55, in resource "aws_security_group_rule" "ingress":
        	            	  55:   self                     = try(each.value["self"], local.rules[lookup(each.value, "rule")]["self"], null)

        	            	"self": conflicts with cidr_blocks}
        	Test:       	TestTerraformBasicExample
--- FAIL: TestTerraformBasicExample (9.30s)
FAIL
FAIL	command-line-arguments	9.315s
FAIL
