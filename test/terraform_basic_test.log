=== RUN   TestTerraformBasicExample
TestTerraformBasicExample 2022-09-26T02:41:08Z retry.go:91: terraform [init -upgrade=false]
TestTerraformBasicExample 2022-09-26T02:41:08Z logger.go:66: Running command terraform with args [init -upgrade=false]
TestTerraformBasicExample 2022-09-26T02:41:08Z logger.go:66: [0m[1mInitializing modules...[0m
TestTerraformBasicExample 2022-09-26T02:41:08Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:08Z logger.go:66: [0m[1mInitializing the backend...[0m
TestTerraformBasicExample 2022-09-26T02:41:09Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:09Z logger.go:66: [0m[1mInitializing provider plugins...[0m
TestTerraformBasicExample 2022-09-26T02:41:09Z logger.go:66: - Reusing previous version of hashicorp/aws from the dependency lock file
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66: - Using previously-installed hashicorp/aws v4.27.0
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66: [0m[32m
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66: You may now begin working with Terraform. Try running "terraform plan" to see
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66: any changes that are required for your infrastructure. All Terraform commands
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66: should now work.
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66: If you ever set or change modules or backend configuration for Terraform,
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66: rerun this command to reinitialize your working directory. If you forget, other
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66: commands will detect it and remind you to do so if necessary.[0m
TestTerraformBasicExample 2022-09-26T02:41:10Z retry.go:91: terraform [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformBasicExample 2022-09-26T02:41:10Z logger.go:66: Running command terraform with args [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66: data.aws_vpc.default: Read complete after 1s [id=vpc-1111111111111111]
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66: Terraform used the selected providers to generate the following execution
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66: plan. Resource actions are indicated with the following symbols:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   + create
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66: Terraform will perform the following actions:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   # module.security_group.aws_security_group.self[0] will be created
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   + resource "aws_security_group" "self" {
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + arn                    = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + description            = "Allow TLS inbound traffic"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + egress                 = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + id                     = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + ingress                = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + name                   = "ex-basic"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + name_prefix            = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + owner_id               = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + revoke_rules_on_delete = false
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + tags                   = {
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + "Name" = "ex-basic"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:         }
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + tags_all               = {
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + "Example"    = "ex-basic"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + "GithubOrg"  = "aidanmelen"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + "GithubRepo" = "terraform-aws-security-group"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + "Name"       = "ex-basic"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:         }
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + vpc_id                 = "vpc-1111111111111111"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + timeouts {
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + create = "10m"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + delete = "15m"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:         }
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:     }
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   # module.security_group.aws_security_group_rule.egress["all-all-to-public"] will be created
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   + resource "aws_security_group_rule" "egress" {
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + cidr_blocks              = [
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + "0.0.0.0/0",
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:         ]
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + description              = "managed by Terraform"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + from_port                = 0
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + id                       = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + ipv6_cidr_blocks         = [
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + "::/0",
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:         ]
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + protocol                 = "-1"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + security_group_id        = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + self                     = false
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + source_security_group_id = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + to_port                  = 0
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + type                     = "egress"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:     }
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   # module.security_group.aws_security_group_rule.ingress["172.31.0.0/16-2600:1f13:b21:6500::/56-https-443-tcp"] will be created
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   + resource "aws_security_group_rule" "ingress" {
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + cidr_blocks              = [
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + "172.31.0.0/16",
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:         ]
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + description              = "managed by Terraform"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + from_port                = 443
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + id                       = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + ipv6_cidr_blocks         = [
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:           + "2600:1f13:b21:6500::/56",
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:         ]
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + protocol                 = "tcp"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + security_group_id        = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + self                     = false
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + source_security_group_id = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + to_port                  = 443
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + type                     = "ingress"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:     }
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66: Plan: 3 to add, 0 to change, 0 to destroy.
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66: Changes to Outputs:
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   + arn       = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   + egress    = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   + id        = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   + ingress   = (known after apply)
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:   + terratest = {
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + data_aws_vpc_default_cidr_block      = "172.31.0.0/16"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:       + data_aws_vpc_default_ipv6_cidr_block = "2600:1f13:b21:6500::/56"
TestTerraformBasicExample 2022-09-26T02:41:13Z logger.go:66:     }
TestTerraformBasicExample 2022-09-26T02:41:15Z logger.go:66: module.security_group.aws_security_group.self[0]: Creating...
TestTerraformBasicExample 2022-09-26T02:41:15Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:15Z logger.go:66: Error: creating Security Group (ex-basic): InvalidGroup.Duplicate: The security group 'ex-basic' already exists for VPC 'vpc-1111111111111111'
TestTerraformBasicExample 2022-09-26T02:41:15Z logger.go:66: 	status code: 400, request id: b128f663-0545-4d03-b543-e16fc84d03fc
TestTerraformBasicExample 2022-09-26T02:41:15Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:15Z logger.go:66:   with module.security_group.aws_security_group.self[0],
TestTerraformBasicExample 2022-09-26T02:41:15Z logger.go:66:   on ../../main.tf line 24, in resource "aws_security_group" "self":
TestTerraformBasicExample 2022-09-26T02:41:15Z logger.go:66:   24: resource "aws_security_group" "self" {
TestTerraformBasicExample 2022-09-26T02:41:15Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:15Z retry.go:99: Returning due to fatal error: FatalError{Underlying: error while running command: exit status 1;
Error: creating Security Group (ex-basic): InvalidGroup.Duplicate: The security group 'ex-basic' already exists for VPC 'vpc-1111111111111111'
	status code: 400, request id: b128f663-0545-4d03-b543-e16fc84d03fc

  with module.security_group.aws_security_group.self[0],
  on ../../main.tf line 24, in resource "aws_security_group" "self":
  24: resource "aws_security_group" "self" {
}
    apply.go:15:
        	Error Trace:	/workspaces/terraform-aws-security-group-v2/test/apply.go:15
        	            				/workspaces/terraform-aws-security-group-v2/test/terraform_basic_test.go:25
        	Error:      	Received unexpected error:
        	            	FatalError{Underlying: error while running command: exit status 1;
        	            	Error: creating Security Group (ex-basic): InvalidGroup.Duplicate: The security group 'ex-basic' already exists for VPC 'vpc-1111111111111111'
        	            		status code: 400, request id: b128f663-0545-4d03-b543-e16fc84d03fc

        	            	  with module.security_group.aws_security_group.self[0],
        	            	  on ../../main.tf line 24, in resource "aws_security_group" "self":
        	            	  24: resource "aws_security_group" "self" {
        	            	}
        	Test:       	TestTerraformBasicExample
TestTerraformBasicExample 2022-09-26T02:41:15Z retry.go:91: terraform [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformBasicExample 2022-09-26T02:41:15Z logger.go:66: Running command terraform with args [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformBasicExample 2022-09-26T02:41:18Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66: data.aws_vpc.default: Read complete after 0s [id=vpc-1111111111111111]
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66: Changes to Outputs:
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66:   - terratest = {
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66:       - data_aws_vpc_default_cidr_block      = "172.31.0.0/16"
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66:       - data_aws_vpc_default_ipv6_cidr_block = "2600:1f13:b21:6500::/56"
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66:     } -> null
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66: You can apply this plan to save these new output values to the Terraform
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66: state, without changing any real infrastructure.
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66:
TestTerraformBasicExample 2022-09-26T02:41:19Z logger.go:66: Destroy complete! Resources: 0 destroyed.
--- FAIL: TestTerraformBasicExample (11.47s)
FAIL
FAIL	command-line-arguments	11.480s
FAIL
