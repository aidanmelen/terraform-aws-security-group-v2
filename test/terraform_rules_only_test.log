=== RUN   TestTerraformRulesOnlyExample
TestTerraformRulesOnlyExample 2022-08-23T02:11:13Z retry.go:91: terraform [init -upgrade=false]
TestTerraformRulesOnlyExample 2022-08-23T02:11:13Z logger.go:66: Running command terraform with args [init -upgrade=false]
TestTerraformRulesOnlyExample 2022-08-23T02:11:13Z logger.go:66: [0m[1mInitializing modules...[0m
TestTerraformRulesOnlyExample 2022-08-23T02:11:14Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:14Z logger.go:66: [0m[1mInitializing the backend...[0m
TestTerraformRulesOnlyExample 2022-08-23T02:11:14Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:14Z logger.go:66: [0m[1mInitializing provider plugins...[0m
TestTerraformRulesOnlyExample 2022-08-23T02:11:14Z logger.go:66: - Reusing previous version of hashicorp/aws from the dependency lock file
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66: - Using previously-installed hashicorp/aws v4.27.0
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66: [0m[32m
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66: You may now begin working with Terraform. Try running "terraform plan" to see
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66: any changes that are required for your infrastructure. All Terraform commands
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66: should now work.
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66: If you ever set or change modules or backend configuration for Terraform,
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66: rerun this command to reinitialize your working directory. If you forget, other
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66: commands will detect it and remind you to do so if necessary.[0m
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z retry.go:91: terraform [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-23T02:11:15Z logger.go:66: Running command terraform with args [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-23T02:11:18Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformRulesOnlyExample 2022-08-23T02:11:18Z logger.go:66: data.aws_vpc.default: Read complete after 1s [id=vpc-9ce7cafb]
TestTerraformRulesOnlyExample 2022-08-23T02:11:18Z logger.go:66: data.aws_security_group.default: Reading...
TestTerraformRulesOnlyExample 2022-08-23T02:11:18Z logger.go:66: data.aws_security_group.default: Read complete after 0s [id=sg-b551fece]
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66: Terraform used the selected providers to generate the following execution
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66: plan. Resource actions are indicated with the following symbols:
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:   + create
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66: Terraform will perform the following actions:
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:   # aws_security_group.pre_existing_sg will be created
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:   + resource "aws_security_group" "pre_existing_sg" {
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + arn                    = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + description            = "Managed by Terraform"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + egress                 = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + id                     = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + ingress                = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + name                   = "ex-rules-only-pre-existing-sg"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + name_prefix            = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + owner_id               = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + revoke_rules_on_delete = false
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + tags                   = {
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:           + "Name" = "ex-rules-only-pre-existing-sg"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:         }
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + tags_all               = {
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:           + "Example"    = "ex-rules-only"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:           + "GithubOrg"  = "aidanmelen"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:           + "GithubRepo" = "terraform-aws-security-group"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:           + "Name"       = "ex-rules-only-pre-existing-sg"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:         }
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + vpc_id                 = "vpc-9ce7cafb"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:     }
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:   # module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-b551fece"] will be created
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:   + resource "aws_security_group_rule" "managed_rules" {
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + description              = "ingress-http-80-tcp-from-sg-b551fece"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + from_port                = 80
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + id                       = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + protocol                 = "tcp"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + security_group_id        = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + self                     = false
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + source_security_group_id = "sg-b551fece"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + to_port                  = 80
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:       + type                     = "ingress"
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:     }
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66: Plan: 2 to add, 0 to change, 0 to destroy.
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66: Changes to Outputs:
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:   + egress_rule_keys          = []
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:   + ingress_rule_keys         = []
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:   + managed_egress_rule_keys  = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:   + managed_ingress_rule_keys = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:19Z logger.go:66:   + pre_existing_sg_id        = (known after apply)
TestTerraformRulesOnlyExample 2022-08-23T02:11:20Z logger.go:66: aws_security_group.pre_existing_sg: Creating...
TestTerraformRulesOnlyExample 2022-08-23T02:11:22Z logger.go:66: aws_security_group.pre_existing_sg: Creation complete after 2s [id=sg-0ed71f245b7741781]
TestTerraformRulesOnlyExample 2022-08-23T02:11:22Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-b551fece"]: Creating...
TestTerraformRulesOnlyExample 2022-08-23T02:11:22Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-b551fece"]: Creation complete after 1s [id=sgrule-4100797029]
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: Outputs:
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: egress_rule_keys = []
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: ingress_rule_keys = []
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: managed_egress_rule_keys = []
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: managed_ingress_rule_keys = [
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66:   "ingress-http-80-tcp-from-sg-b551fece",
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: ]
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: pre_existing_sg_id = "sg-0ed71f245b7741781"
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z retry.go:91: terraform [output -no-color -json ingress_rule_keys]
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: Running command terraform with args [output -no-color -json ingress_rule_keys]
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: []
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z retry.go:91: terraform [output -no-color -json managed_ingress_rule_keys]
TestTerraformRulesOnlyExample 2022-08-23T02:11:23Z logger.go:66: Running command terraform with args [output -no-color -json managed_ingress_rule_keys]
TestTerraformRulesOnlyExample 2022-08-23T02:11:24Z logger.go:66: ["ingress-http-80-tcp-from-sg-b551fece"]
TestTerraformRulesOnlyExample 2022-08-23T02:11:24Z retry.go:91: terraform [output -no-color -json egress_rule_keys]
TestTerraformRulesOnlyExample 2022-08-23T02:11:24Z logger.go:66: Running command terraform with args [output -no-color -json egress_rule_keys]
TestTerraformRulesOnlyExample 2022-08-23T02:11:25Z logger.go:66: []
TestTerraformRulesOnlyExample 2022-08-23T02:11:25Z retry.go:91: terraform [output -no-color -json managed_egress_rule_keys]
TestTerraformRulesOnlyExample 2022-08-23T02:11:25Z logger.go:66: Running command terraform with args [output -no-color -json managed_egress_rule_keys]
TestTerraformRulesOnlyExample 2022-08-23T02:11:26Z logger.go:66: []
TestTerraformRulesOnlyExample 2022-08-23T02:11:26Z retry.go:91: terraform [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-23T02:11:26Z logger.go:66: Running command terraform with args [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-23T02:11:29Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformRulesOnlyExample 2022-08-23T02:11:29Z logger.go:66: data.aws_vpc.default: Read complete after 0s [id=vpc-9ce7cafb]
TestTerraformRulesOnlyExample 2022-08-23T02:11:29Z logger.go:66: data.aws_security_group.default: Reading...
TestTerraformRulesOnlyExample 2022-08-23T02:11:29Z logger.go:66: aws_security_group.pre_existing_sg: Refreshing state... [id=sg-0ed71f245b7741781]
TestTerraformRulesOnlyExample 2022-08-23T02:11:29Z logger.go:66: data.aws_security_group.default: Read complete after 1s [id=sg-b551fece]
TestTerraformRulesOnlyExample 2022-08-23T02:11:29Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-b551fece"]: Refreshing state... [id=sgrule-4100797029]
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66: Terraform used the selected providers to generate the following execution
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66: plan. Resource actions are indicated with the following symbols:
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:   - destroy
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66: Terraform will perform the following actions:
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:   # aws_security_group.pre_existing_sg will be destroyed
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:   - resource "aws_security_group" "pre_existing_sg" {
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - arn                    = "arn:aws:ec2:us-west-2:326504147071:security-group/sg-0ed71f245b7741781" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - description            = "Managed by Terraform" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - egress                 = [] -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - id                     = "sg-0ed71f245b7741781" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - ingress                = [
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:           - {
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:               - cidr_blocks      = []
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:               - description      = "ingress-http-80-tcp-from-sg-b551fece"
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:               - from_port        = 80
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:               - ipv6_cidr_blocks = []
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:               - prefix_list_ids  = []
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:               - protocol         = "tcp"
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:               - security_groups  = [
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:                   - "sg-b551fece",
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:                 ]
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:               - self             = false
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:               - to_port          = 80
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:             },
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:         ] -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - name                   = "ex-rules-only-pre-existing-sg" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - owner_id               = "326504147071" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - revoke_rules_on_delete = false -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - tags                   = {
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:           - "Name" = "ex-rules-only-pre-existing-sg"
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:         } -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - tags_all               = {
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:           - "Example"    = "ex-rules-only"
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:           - "GithubOrg"  = "aidanmelen"
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:           - "GithubRepo" = "terraform-aws-security-group"
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:           - "Name"       = "ex-rules-only-pre-existing-sg"
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:         } -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - vpc_id                 = "vpc-9ce7cafb" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:     }
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:   # module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-b551fece"] will be destroyed
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:   - resource "aws_security_group_rule" "managed_rules" {
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - description              = "ingress-http-80-tcp-from-sg-b551fece" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - from_port                = 80 -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - id                       = "sgrule-4100797029" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - protocol                 = "tcp" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - security_group_id        = "sg-0ed71f245b7741781" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - self                     = false -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - source_security_group_id = "sg-b551fece" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - to_port                  = 80 -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - type                     = "ingress" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:     }
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66: Plan: 0 to add, 0 to change, 2 to destroy.
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66: Changes to Outputs:
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:   - egress_rule_keys          = [] -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:   - ingress_rule_keys         = [] -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:   - managed_egress_rule_keys  = [] -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:   - managed_ingress_rule_keys = [
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:       - "ingress-http-80-tcp-from-sg-b551fece",
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:     ] -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:30Z logger.go:66:   - pre_existing_sg_id        = "sg-0ed71f245b7741781" -> null
TestTerraformRulesOnlyExample 2022-08-23T02:11:31Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-b551fece"]: Destroying... [id=sgrule-4100797029]
TestTerraformRulesOnlyExample 2022-08-23T02:11:31Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-b551fece"]: Destruction complete after 1s
TestTerraformRulesOnlyExample 2022-08-23T02:11:31Z logger.go:66: aws_security_group.pre_existing_sg: Destroying... [id=sg-0ed71f245b7741781]
TestTerraformRulesOnlyExample 2022-08-23T02:11:32Z logger.go:66: aws_security_group.pre_existing_sg: Destruction complete after 1s
TestTerraformRulesOnlyExample 2022-08-23T02:11:32Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-23T02:11:32Z logger.go:66: Destroy complete! Resources: 2 destroyed.
--- PASS: TestTerraformRulesOnlyExample (18.84s)
PASS
ok  	command-line-arguments	18.858s
