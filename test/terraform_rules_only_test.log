=== RUN   TestTerraformRulesOnlyExample
TestTerraformRulesOnlyExample 2022-10-07T19:34:00Z retry.go:91: terraform [init -upgrade=false]
TestTerraformRulesOnlyExample 2022-10-07T19:34:00Z logger.go:66: Running command terraform with args [init -upgrade=false]
TestTerraformRulesOnlyExample 2022-10-07T19:34:00Z logger.go:66: [0m[1mInitializing modules...[0m
TestTerraformRulesOnlyExample 2022-10-07T19:34:00Z logger.go:66:
TestTerraformRulesOnlyExample 2022-10-07T19:34:00Z logger.go:66: [0m[1mInitializing the backend...[0m
TestTerraformRulesOnlyExample 2022-10-07T19:34:01Z logger.go:66:
TestTerraformRulesOnlyExample 2022-10-07T19:34:01Z logger.go:66: [0m[1mInitializing provider plugins...[0m
TestTerraformRulesOnlyExample 2022-10-07T19:34:01Z logger.go:66: - Reusing previous version of hashicorp/aws from the dependency lock file
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66: - Using previously-installed hashicorp/aws v4.34.0
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66:
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66: [0m[32m
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66: You may now begin working with Terraform. Try running "terraform plan" to see
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66: any changes that are required for your infrastructure. All Terraform commands
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66: should now work.
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66:
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66: If you ever set or change modules or backend configuration for Terraform,
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66: rerun this command to reinitialize your working directory. If you forget, other
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66: commands will detect it and remind you to do so if necessary.[0m
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z retry.go:91: terraform [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-10-07T19:34:02Z logger.go:66: Running command terraform with args [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-10-07T19:34:07Z logger.go:66: module.pre_existing.aws_security_group.self[0]: Creating...
TestTerraformRulesOnlyExample 2022-10-07T19:34:09Z logger.go:66: module.pre_existing.aws_security_group.self[0]: Creation complete after 1s [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-10-07T19:34:09Z logger.go:66: module.security_group.aws_security_group_rule.ingress["443-443-tcp-0.0.0.0/0-::/0"]: Creating...
TestTerraformRulesOnlyExample 2022-10-07T19:34:09Z logger.go:66: module.security_group.aws_security_group_rule.egress["0-0-all-0.0.0.0/0-::/0"]: Creating...
TestTerraformRulesOnlyExample 2022-10-07T19:34:09Z logger.go:66: module.security_group.aws_security_group_rule.ingress["443-443-tcp-0.0.0.0/0-::/0"]: Creation complete after 1s [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66: module.security_group.aws_security_group_rule.egress["0-0-all-0.0.0.0/0-::/0"]: Creation complete after 1s [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66: Apply complete! Resources: 3 added, 0 changed, 0 destroyed.
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66: Outputs:
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66: egress = [
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:   {
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "cidr_blocks" = tolist([
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:       "0.0.0.0/0",
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     ])
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "description" = "managed by Terraform"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "from_port" = 0
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "id" = "sgrule-1111111111"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "ipv6_cidr_blocks" = tolist([
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:       "::/0",
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     ])
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "prefix_list_ids" = tolist(null) /* of string */
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "protocol" = "-1"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "security_group_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "self" = false
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "source_security_group_id" = tostring(null)
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "timeouts" = null /* object */
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "to_port" = 0
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "type" = "egress"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:   },
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66: ]
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66: ingress = [
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:   {
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "cidr_blocks" = tolist([
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:       "0.0.0.0/0",
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     ])
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "description" = "managed by Terraform"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "from_port" = 443
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "id" = "sgrule-1111111111"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "ipv6_cidr_blocks" = tolist([
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:       "::/0",
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     ])
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "prefix_list_ids" = tolist(null) /* of string */
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "protocol" = "tcp"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "security_group_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "self" = false
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "source_security_group_id" = tostring(null)
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "timeouts" = null /* object */
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "to_port" = 443
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:     "type" = "ingress"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:   },
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66: ]
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66: terratest = {
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:   "data_aws_security_group_default_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:   "egress_count" = 1
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:   "ingress_count" = 1
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66:   "pre_existing_security_group_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66: }
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z retry.go:91: terraform [output -no-color -json ingress]
TestTerraformRulesOnlyExample 2022-10-07T19:34:10Z logger.go:66: Running command terraform with args [output -no-color -json ingress]
TestTerraformRulesOnlyExample 2022-10-07T19:34:11Z logger.go:66: [{"cidr_blocks":["0.0.0.0/0"],"description":"managed by Terraform","from_port":443,"id":"sgrule-1111111111","ipv6_cidr_blocks":["::/0"],"prefix_list_ids":null,"protocol":"tcp","security_group_id":"sg-1111111111111111","self":false,"source_security_group_id":null,"timeouts":null,"to_port":443,"type":"ingress"}]
TestTerraformRulesOnlyExample 2022-10-07T19:34:11Z retry.go:91: terraform [output -no-color -json egress]
TestTerraformRulesOnlyExample 2022-10-07T19:34:11Z logger.go:66: Running command terraform with args [output -no-color -json egress]
TestTerraformRulesOnlyExample 2022-10-07T19:34:12Z logger.go:66: [{"cidr_blocks":["0.0.0.0/0"],"description":"managed by Terraform","from_port":0,"id":"sgrule-1111111111","ipv6_cidr_blocks":["::/0"],"prefix_list_ids":null,"protocol":"-1","security_group_id":"sg-1111111111111111","self":false,"source_security_group_id":null,"timeouts":null,"to_port":0,"type":"egress"}]
TestTerraformRulesOnlyExample 2022-10-07T19:34:12Z retry.go:91: terraform [output -no-color -json terratest]
TestTerraformRulesOnlyExample 2022-10-07T19:34:12Z logger.go:66: Running command terraform with args [output -no-color -json terratest]
TestTerraformRulesOnlyExample 2022-10-07T19:34:12Z logger.go:66: {"data_aws_security_group_default_id":"sg-1111111111111111","egress_count":1,"ingress_count":1,"pre_existing_security_group_id":"sg-1111111111111111"}
TestTerraformRulesOnlyExample 2022-10-07T19:34:12Z retry.go:91: terraform [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-10-07T19:34:12Z logger.go:66: Running command terraform with args [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-10-07T19:34:16Z logger.go:66: module.pre_existing.aws_security_group.self[0]: Refreshing state... [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-10-07T19:34:16Z logger.go:66: module.security_group.aws_security_group_rule.ingress["443-443-tcp-0.0.0.0/0-::/0"]: Refreshing state... [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-10-07T19:34:16Z logger.go:66: module.security_group.aws_security_group_rule.egress["0-0-all-0.0.0.0/0-::/0"]: Refreshing state... [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-10-07T19:34:19Z logger.go:66: module.security_group.aws_security_group_rule.ingress["443-443-tcp-0.0.0.0/0-::/0"]: Destroying... [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-10-07T19:34:19Z logger.go:66: module.security_group.aws_security_group_rule.egress["0-0-all-0.0.0.0/0-::/0"]: Destroying... [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-10-07T19:34:19Z logger.go:66: module.security_group.aws_security_group_rule.ingress["443-443-tcp-0.0.0.0/0-::/0"]: Destruction complete after 1s
TestTerraformRulesOnlyExample 2022-10-07T19:34:20Z logger.go:66: module.security_group.aws_security_group_rule.egress["0-0-all-0.0.0.0/0-::/0"]: Destruction complete after 1s
TestTerraformRulesOnlyExample 2022-10-07T19:34:20Z logger.go:66: module.pre_existing.aws_security_group.self[0]: Destroying... [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-10-07T19:34:21Z logger.go:66: module.pre_existing.aws_security_group.self[0]: Destruction complete after 1s
TestTerraformRulesOnlyExample 2022-10-07T19:34:21Z logger.go:66:
TestTerraformRulesOnlyExample 2022-10-07T19:34:21Z logger.go:66: Destroy complete! Resources: 3 destroyed.
--- PASS: TestTerraformRulesOnlyExample (20.94s)
PASS
ok  	command-line-arguments	20.955s
