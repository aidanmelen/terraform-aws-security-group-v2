=== RUN   TestTerraformRulesOnlyExample
TestTerraformRulesOnlyExample 2022-08-26T22:31:08Z retry.go:91: terraform [init -upgrade=false]
TestTerraformRulesOnlyExample 2022-08-26T22:31:08Z logger.go:66: Running command terraform with args [init -upgrade=false]
TestTerraformRulesOnlyExample 2022-08-26T22:31:08Z logger.go:66: [0m[1mInitializing modules...[0m
TestTerraformRulesOnlyExample 2022-08-26T22:31:08Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:08Z logger.go:66: [0m[1mInitializing the backend...[0m
TestTerraformRulesOnlyExample 2022-08-26T22:31:09Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:09Z logger.go:66: [0m[1mInitializing provider plugins...[0m
TestTerraformRulesOnlyExample 2022-08-26T22:31:09Z logger.go:66: - Reusing previous version of hashicorp/aws from the dependency lock file
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66: - Using previously-installed hashicorp/aws v4.27.0
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66: [0m[32m
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66: You may now begin working with Terraform. Try running "terraform plan" to see
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66: any changes that are required for your infrastructure. All Terraform commands
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66: should now work.
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66: If you ever set or change modules or backend configuration for Terraform,
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66: rerun this command to reinitialize your working directory. If you forget, other
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66: commands will detect it and remind you to do so if necessary.[0m
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z retry.go:91: terraform [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-26T22:31:10Z logger.go:66: Running command terraform with args [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66: data.aws_vpc.default: Read complete after 1s [id=vpc-11111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66: data.aws_security_group.default: Reading...
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66: data.aws_security_group.default: Read complete after 0s [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66: Terraform used the selected providers to generate the following execution
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66: plan. Resource actions are indicated with the following symbols:
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:   + create
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66: Terraform will perform the following actions:
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:   # aws_security_group.pre_existing will be created
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:   + resource "aws_security_group" "pre_existing" {
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + arn                    = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + description            = "ex-rules-only-pre-existing"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + egress                 = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + id                     = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + ingress                = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + name                   = "ex-rules-only-pre-existing"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + name_prefix            = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + owner_id               = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + revoke_rules_on_delete = false
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + tags                   = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:           + "Name" = "ex-rules-only-pre-existing"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:         }
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + tags_all               = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:           + "Example"    = "ex-rules-only"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:           + "GithubOrg"  = "aidanmelen"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:           + "GithubRepo" = "terraform-aws-security-group"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:           + "Name"       = "ex-rules-only-pre-existing"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:         }
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + vpc_id                 = "vpc-11111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:     }
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:   # module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-1111111111111111"] will be created
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:   + resource "aws_security_group_rule" "managed_rules" {
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + description              = "ingress-http-80-tcp-from-sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + from_port                = 80
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + id                       = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + protocol                 = "tcp"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + security_group_id        = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + self                     = false
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + source_security_group_id = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + to_port                  = 80
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + type                     = "ingress"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:     }
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66: Plan: 2 to add, 0 to change, 0 to destroy.
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66: Changes to Outputs:
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:   + egress       = {}
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:   + egress_keys  = []
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:   + ingress      = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:   + ingress_keys = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:   + terratest    = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + aws_security_group_pre_existing_id = (known after apply)
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:       + data_aws_security_group_default_id = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:14Z logger.go:66:     }
TestTerraformRulesOnlyExample 2022-08-26T22:31:16Z logger.go:66: aws_security_group.pre_existing: Creating...
TestTerraformRulesOnlyExample 2022-08-26T22:31:18Z logger.go:66: aws_security_group.pre_existing: Creation complete after 2s [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:18Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-1111111111111111"]: Creating...
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-1111111111111111"]: Creation complete after 1s [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: Outputs:
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: egress = {}
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: egress_keys = []
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: ingress = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:   "ingress-http-80-tcp-from-sg-1111111111111111" = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "cidr_blocks" = tolist(null) /* of string */
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "description" = "ingress-http-80-tcp-from-sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "from_port" = 80
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "id" = "sgrule-1111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "ipv6_cidr_blocks" = tolist(null) /* of string */
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "prefix_list_ids" = tolist(null) /* of string */
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "protocol" = "tcp"
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "security_group_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "self" = false
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "source_security_group_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "timeouts" = null /* object */
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "to_port" = 80
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:     "type" = "ingress"
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:   }
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: }
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: ingress_keys = [
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:   "ingress-http-80-tcp-from-sg-1111111111111111",
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: ]
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: terratest = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:   "aws_security_group_pre_existing_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66:   "data_aws_security_group_default_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: }
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z retry.go:91: terraform [output -no-color -json terratest]
TestTerraformRulesOnlyExample 2022-08-26T22:31:19Z logger.go:66: Running command terraform with args [output -no-color -json terratest]
TestTerraformRulesOnlyExample 2022-08-26T22:31:20Z logger.go:66: {"aws_security_group_pre_existing_id":"sg-1111111111111111","data_aws_security_group_default_id":"sg-1111111111111111"}
TestTerraformRulesOnlyExample 2022-08-26T22:31:20Z retry.go:91: terraform [output -no-color -json ingress]
TestTerraformRulesOnlyExample 2022-08-26T22:31:20Z logger.go:66: Running command terraform with args [output -no-color -json ingress]
TestTerraformRulesOnlyExample 2022-08-26T22:31:21Z logger.go:66: {"ingress-http-80-tcp-from-sg-1111111111111111":{"cidr_blocks":null,"description":"ingress-http-80-tcp-from-sg-1111111111111111","from_port":80,"id":"sgrule-1111111111","ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","security_group_id":"sg-1111111111111111","self":false,"source_security_group_id":"sg-1111111111111111","timeouts":null,"to_port":80,"type":"ingress"}}
TestTerraformRulesOnlyExample 2022-08-26T22:31:21Z retry.go:91: terraform [output -no-color -json egress]
TestTerraformRulesOnlyExample 2022-08-26T22:31:21Z logger.go:66: Running command terraform with args [output -no-color -json egress]
TestTerraformRulesOnlyExample 2022-08-26T22:31:22Z logger.go:66: {}
TestTerraformRulesOnlyExample 2022-08-26T22:31:22Z retry.go:91: terraform [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-26T22:31:22Z logger.go:66: Running command terraform with args [apply -input=false -auto-approve -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66: data.aws_vpc.default: Read complete after 1s [id=vpc-11111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66: data.aws_security_group.default: Reading...
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66: aws_security_group.pre_existing: Refreshing state... [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66: data.aws_security_group.default: Read complete after 0s [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-1111111111111111"]: Refreshing state... [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66: No changes. Your infrastructure matches the configuration.
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66: Terraform has compared your real infrastructure against your configuration
TestTerraformRulesOnlyExample 2022-08-26T22:31:26Z logger.go:66: and found no differences, so no changes are needed.
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: Apply complete! Resources: 0 added, 0 changed, 0 destroyed.
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: Outputs:
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: egress = {}
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: egress_keys = []
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: ingress = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:   "ingress-http-80-tcp-from-sg-1111111111111111" = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "cidr_blocks" = tolist(null) /* of string */
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "description" = "ingress-http-80-tcp-from-sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "from_port" = 80
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "id" = "sgrule-1111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "ipv6_cidr_blocks" = tolist(null) /* of string */
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "prefix_list_ids" = tolist(null) /* of string */
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "protocol" = "tcp"
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "security_group_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "self" = false
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "source_security_group_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "timeouts" = null /* object */
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "to_port" = 80
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:     "type" = "ingress"
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:   }
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: }
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: ingress_keys = [
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:   "ingress-http-80-tcp-from-sg-1111111111111111",
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: ]
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: terratest = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:   "aws_security_group_pre_existing_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66:   "data_aws_security_group_default_id" = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: }
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: Running terraform with args [plan -input=false -detailed-exitcode -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-26T22:31:28Z logger.go:66: Running command terraform with args [plan -input=false -detailed-exitcode -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-26T22:31:31Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66: data.aws_vpc.default: Read complete after 0s [id=vpc-11111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66: data.aws_security_group.default: Reading...
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66: aws_security_group.pre_existing: Refreshing state... [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66: data.aws_security_group.default: Read complete after 0s [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-1111111111111111"]: Refreshing state... [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66: No changes. Your infrastructure matches the configuration.
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66: Terraform has compared your real infrastructure against your configuration
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66: and found no differences, so no changes are needed.
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z retry.go:91: terraform [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-26T22:31:32Z logger.go:66: Running command terraform with args [destroy -auto-approve -input=false -no-color -lock=false]
TestTerraformRulesOnlyExample 2022-08-26T22:31:36Z logger.go:66: data.aws_vpc.default: Reading...
TestTerraformRulesOnlyExample 2022-08-26T22:31:36Z logger.go:66: data.aws_vpc.default: Read complete after 0s [id=vpc-11111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:36Z logger.go:66: data.aws_security_group.default: Reading...
TestTerraformRulesOnlyExample 2022-08-26T22:31:36Z logger.go:66: aws_security_group.pre_existing: Refreshing state... [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:36Z logger.go:66: data.aws_security_group.default: Read complete after 0s [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:36Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-1111111111111111"]: Refreshing state... [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66: Terraform used the selected providers to generate the following execution
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66: plan. Resource actions are indicated with the following symbols:
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:   - destroy
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66: Terraform will perform the following actions:
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:   # aws_security_group.pre_existing will be destroyed
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:   - resource "aws_security_group" "pre_existing" {
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - arn                    = "arn:aws:ec2:us-west-2:111111111111:security-group/sg-1111111111111111" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - description            = "ex-rules-only-pre-existing" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - egress                 = [] -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - id                     = "sg-1111111111111111" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - ingress                = [
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - {
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:               - cidr_blocks      = []
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:               - description      = "ingress-http-80-tcp-from-sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:               - from_port        = 80
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:               - ipv6_cidr_blocks = []
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:               - prefix_list_ids  = []
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:               - protocol         = "tcp"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:               - security_groups  = [
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:                   - "sg-1111111111111111",
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:                 ]
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:               - self             = false
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:               - to_port          = 80
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:             },
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:         ] -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - name                   = "ex-rules-only-pre-existing" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - owner_id               = "111111111111" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - revoke_rules_on_delete = false -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - tags                   = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - "Name" = "ex-rules-only-pre-existing"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:         } -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - tags_all               = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - "Example"    = "ex-rules-only"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - "GithubOrg"  = "aidanmelen"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - "GithubRepo" = "terraform-aws-security-group"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - "Name"       = "ex-rules-only-pre-existing"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:         } -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - vpc_id                 = "vpc-11111111" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:     }
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:   # module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-1111111111111111"] will be destroyed
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:   - resource "aws_security_group_rule" "managed_rules" {
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - description              = "ingress-http-80-tcp-from-sg-1111111111111111" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - from_port                = 80 -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - id                       = "sgrule-1111111111" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - protocol                 = "tcp" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - security_group_id        = "sg-1111111111111111" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - self                     = false -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - source_security_group_id = "sg-1111111111111111" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - to_port                  = 80 -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - type                     = "ingress" -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:     }
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66: Plan: 0 to add, 0 to change, 2 to destroy.
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66: Changes to Outputs:
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:   - egress       = {} -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:   - egress_keys  = [] -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:   - ingress      = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - ingress-http-80-tcp-from-sg-1111111111111111 = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - cidr_blocks              = null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - description              = "ingress-http-80-tcp-from-sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - from_port                = 80
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - id                       = "sgrule-1111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - ipv6_cidr_blocks         = null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - prefix_list_ids          = null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - protocol                 = "tcp"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - security_group_id        = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - self                     = false
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - source_security_group_id = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - timeouts                 = null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - to_port                  = 80
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:           - type                     = "ingress"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:         }
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:     } -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:   - ingress_keys = [
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - "ingress-http-80-tcp-from-sg-1111111111111111",
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:     ] -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:   - terratest    = {
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - aws_security_group_pre_existing_id = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:       - data_aws_security_group_default_id = "sg-1111111111111111"
TestTerraformRulesOnlyExample 2022-08-26T22:31:37Z logger.go:66:     } -> null
TestTerraformRulesOnlyExample 2022-08-26T22:31:38Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-1111111111111111"]: Destroying... [id=sgrule-1111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:39Z logger.go:66: module.security_group.aws_security_group_rule.managed_rules["ingress-http-80-tcp-from-sg-1111111111111111"]: Destruction complete after 0s
TestTerraformRulesOnlyExample 2022-08-26T22:31:39Z logger.go:66: aws_security_group.pre_existing: Destroying... [id=sg-1111111111111111]
TestTerraformRulesOnlyExample 2022-08-26T22:31:40Z logger.go:66: aws_security_group.pre_existing: Destruction complete after 1s
TestTerraformRulesOnlyExample 2022-08-26T22:31:40Z logger.go:66:
TestTerraformRulesOnlyExample 2022-08-26T22:31:40Z logger.go:66: Destroy complete! Resources: 2 destroyed.
--- PASS: TestTerraformRulesOnlyExample (31.74s)
PASS
ok  	command-line-arguments	31.753s
